#!/usr/bin/env python
#
# Gtk.PanedQuadrant Synchronized Nested Gtk.Paned Widgets
# Copyright (C) 2014  Dylan Scott Grafmyre <thorsummoner@live.com>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
"""
    Example Linked Panes
"""

import signal

from gi.repository import Gtk
import gtk_panedquadrent

def main():

    if 'gtk':
        win = Gtk.Window()
        # win.set_size_request(500, 400)
        win.connect("delete-event", Gtk.main_quit)

        layout = Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
        win.add(layout)

        # linkedpanes
        paned_quadrant = gtk_panedquadrent.PanedQuadrant(
            Gtk.Label('Top Left'), Gtk.Label('Top Right'),
            Gtk.Label('Bottom Left'), Gtk.Label('Bottom\nRight'),
            expand=True
        )
        layout.add(paned_quadrant)

        # methods
        buttons = Gtk.ButtonBox(
            orientation=Gtk.Orientation.HORIZONTAL,
            layout_style=Gtk.ButtonBoxStyle.EDGE,
            margin=5,
        )
        layout.add(buttons)
        buttons_left = Gtk.Box(orientation=Gtk.Orientation.HORIZONTAL)
        buttons.add(buttons_left)
        buttons_right = Gtk.Box(orientation=Gtk.Orientation.HORIZONTAL)
        buttons.add(buttons_right)
        if buttons:
            # reset
            reset_button = Gtk.Button('Reset')
            reset_button.get_child().set_padding(xpad=10, ypad=0)
            def _clicked(*_):
                paned_quadrant.reset()
            reset_button.connect('clicked', _clicked)
            buttons_left.add(reset_button)

            # hadjust

        win.show_all()
        signal.signal(signal.SIGINT, signal.SIG_DFL)
        Gtk.main()


if __name__ == '__main__':
    main()
